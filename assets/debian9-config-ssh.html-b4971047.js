import{_ as e,X as s,Y as a,a1 as d}from"./framework-ca96282b.js";const i={},n=d(`<h1 id="debian9-ssh配置" tabindex="-1"><a class="header-anchor" href="#debian9-ssh配置" aria-hidden="true">#</a> debian9 SSH配置</h1><h2 id="配置无密码访问" tabindex="-1"><a class="header-anchor" href="#配置无密码访问" aria-hidden="true">#</a> 配置无密码访问</h2><p>首先在本地（工具如Xshell或git命令行）生成ssh的密钥，公钥和私钥，将私钥保存在本地，公钥<code>.pub结尾</code>内容上传或复制到服务器</p><p>上传目录为<code>~/.ssh/id_rsa.pub/authorized_keys</code>文件中，即用户home目录底下的<code>authorized_keys</code>文件，如果没有新建即可</p><p>以下是使用<code>git bash</code>生成密钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen 
会在用户目录下生成<span class="token punctuation">(</span>/your_home/.ssh/id_rsa）
注意之前生成的会被覆盖，可以指定目录  

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更换ssh默认端口" tabindex="-1"><a class="header-anchor" href="#更换ssh默认端口" aria-hidden="true">#</a> 更换SSH默认端口</h2><p><code>/etc/ssh/sshd_config</code>#port行取消注释，改为指定端口<br><code>service ssh restart</code></p>`,8),c=[n];function r(h,o){return s(),a("div",null,c)}const l=e(i,[["render",r],["__file","debian9-config-ssh.html.vue"]]);export{l as default};
