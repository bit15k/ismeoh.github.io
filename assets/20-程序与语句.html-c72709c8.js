import{_ as n,X as s,Y as a,a1 as e}from"./framework-ca96282b.js";const t={},p=e(`<h1 id="程序与语句" tabindex="-1"><a class="header-anchor" href="#程序与语句" aria-hidden="true">#</a> 程序与语句</h1><h2 id="程序" tabindex="-1"><a class="header-anchor" href="#程序" aria-hidden="true">#</a> 程序</h2><p>一个程序是由很多个或一个程序单位构成，这里的程序单位是指一个文件</p><p>一个程序单位由以下构成</p><ul><li>预处理指令</li><li>全局声明部分</li><li>函数</li></ul><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span> <span class="token comment">// 预处理指令</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">// 使用命名空间</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 主函数</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 函数声明</span>
    <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>
    c <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;max = &quot;</span> <span class="token operator">&lt;&lt;</span> c <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> 
    
<span class="token punctuation">}</span>
<span class="token comment">// 函数实现</span>
<span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 函数首部</span>
    <span class="token keyword">int</span> z<span class="token punctuation">;</span><span class="token comment">// 局部声明</span>
    <span class="token comment">// 实现部分</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span>
        z <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        z <span class="token operator">=</span> y<span class="token punctuation">;</span>
    <span class="token keyword">return</span> z<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数部分主要包含</p><ul><li>函数首部，即第一行</li><li>函数体 <ul><li>局部声明</li><li>实现部分</li></ul></li></ul><h2 id="语句" tabindex="-1"><a class="header-anchor" href="#语句" aria-hidden="true">#</a> 语句</h2><p>这里说明语句，<strong>语句</strong>是指使用逗号或{}结尾就是语句，通常分为如下几种</p><ul><li>声明语句，比如变量的声明</li><li>执行语句，执行具体操作的语句</li></ul><p>执行语句有很多种</p><ul><li>控制语句，有很多如if条件、for\\while循环、break和continue语句等等</li><li>函数和流对象调用语句</li><li>表达式语句</li><li>空语句，即<code>单独一个分号;</code></li><li>复合语句,即使用大括号括起来的语句</li></ul>`,13),l=[p];function i(o,c){return s(),a("div",null,l)}const r=n(t,[["render",i],["__file","20-程序与语句.html.vue"]]);export{r as default};
