import{_ as n,V as s,W as a,X as e}from"./framework-182bcb23.js";const p={},t=e(`<h1 id="es6-模块化" tabindex="-1"><a class="header-anchor" href="#es6-模块化" aria-hidden="true">#</a> ES6 模块化</h1><h2 id="模块化理论" tabindex="-1"><a class="header-anchor" href="#模块化理论" aria-hidden="true">#</a> 模块化理论</h2><p>模块化是将一个大的程序文件，拆分成很多小的文件，然后将小的文件组合起来，这里的小文件就是模块</p><p>优势</p><p>防止命名冲突<br> 代码复用<br> 高维护性</p><p>ES6之前的模块化</p><p>commonJS:Node.js\\Browserify<br> AMD:require.js<br> CMD:seaJS</p><h2 id="模块化语法" tabindex="-1"><a class="header-anchor" href="#模块化语法" aria-hidden="true">#</a> 模块化语法</h2><p>模块主要有两个命令：import和export<br> export：用于规定模块的对外接口<br> import：导入其他模块提供的功能<br> 一个模块就是一个独立的文件</p><h2 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用" aria-hidden="true">#</a> 基本使用</h2><p>暴露模块<br><code>export 变量类型 变量名</code>或<code>export 函数</code><br> 例如在index.js中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;孙悟空&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sayName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用模块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>标签
    <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> index <span class="token keyword">from</span> <span class="token string">&#39;模块文件地址&#39;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 type类型module</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> index <span class="token keyword">from</span> <span class="token string">&#39;./modules/index.js&#39;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span><span class="token operator">-</span>
输出函数和变量
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面，表示导入来自from的全部，并设置别名index</p><h2 id="暴露" tabindex="-1"><a class="header-anchor" href="#暴露" aria-hidden="true">#</a> 暴露</h2><h3 id="分别暴露" tabindex="-1"><a class="header-anchor" href="#分别暴露" aria-hidden="true">#</a> 分别暴露</h3><p>语法<code>export{变量1,变量2}</code></p><p>例如如下</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;孙悟空&#39;</span>
<span class="token keyword">function</span> <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sayName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span>sayName<span class="token punctuation">}</span>
<span class="token operator">--</span><span class="token operator">-</span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> index <span class="token keyword">from</span> <span class="token string">&#39;./modules/index.js&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="默认暴露" tabindex="-1"><a class="header-anchor" href="#默认暴露" aria-hidden="true">#</a> 默认暴露</h3><p>语法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>语法 <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
        obj
    <span class="token punctuation">}</span>

例如
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span> <span class="token operator">:</span> <span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sayName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sayName&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>
<span class="token comment">// 1. 引入单个文件中的全部模块</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> index <span class="token keyword">from</span> <span class="token string">&#39;./modules/index.js&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
index<span class="token punctuation">.</span>default<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="导入" tabindex="-1"><a class="header-anchor" href="#导入" aria-hidden="true">#</a> 导入</h2><h3 id="全部导入" tabindex="-1"><a class="header-anchor" href="#全部导入" aria-hidden="true">#</a> 全部导入</h3><p><code>格式：import * as 别名 from &#39;./modules/index.js&#39;</code>上面全是</p><h3 id="解构赋值形式导入" tabindex="-1"><a class="header-anchor" href="#解构赋值形式导入" aria-hidden="true">#</a> 解构赋值形式导入</h3><p>格式<br> 第一种：引入分别暴露<br><code>import {属性1 [&lt;as&gt; &lt;别名&gt;]} from &#39;模块地址&#39;</code><br> 别名可以应对重名的情况</p><p>第二种：引入默认暴露<br><code>import {default as 别名]} from &#39;模块地址&#39;</code><br> 或<code>import 别名 from &#39;模块地址&#39;</code><br> 这是引入默认暴露的简便写法</p><p>APP引入<br> 统一的APP对模块进行管理，即只引入APP，APP.js用来管理所有模块</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
m1<span class="token punctuation">.</span>js
m2<span class="token punctuation">.</span>js
m3<span class="token punctuation">.</span>js

<span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token operator">--</span><span class="token operator">-</span>
app<span class="token punctuation">.</span>js文件
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> m1 <span class="token keyword">from</span> <span class="token string">&quot;./m1.js&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>m1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span><span class="token operator">-</span>
index<span class="token punctuation">.</span>html文件
<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;./js/app.js&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","es6-module.html.vue"]]);export{d as default};
