import{_ as e,W as s,X as n,a0 as i}from"./framework-0a321081.js";const a={},t=i(`<h1 id="jetbrains系列软件如idea注释模板配置" tabindex="-1"><a class="header-anchor" href="#jetbrains系列软件如idea注释模板配置" aria-hidden="true">#</a> jetbrains系列软件如IDEA注释模板配置</h1><p>以下以C-Lion为例，其他如IDEA同理</p><h2 id="文件注释" tabindex="-1"><a class="header-anchor" href="#文件注释" aria-hidden="true">#</a> 文件注释</h2><p>文件注释是指新建一个文件自动生成的注释</p><p>设置方法<code>file-&gt;settting-&gt;editor-&gt;file and codetemplate-&gt;includes</code></p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-39-23.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-39-23"></p><p>替换如下代码</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>$HEADER_COMMENTS<span class="token punctuation">)</span></span></span>
<span class="token comment">/**
  ******************************************************************************
  * @file           : \${FILE_NAME}
  * @author         : \${USER}
  * @brief          : None
  * @attention      : None
  * @date           : \${DATE}
  ******************************************************************************
  */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>$ORGANIZATION_NAME <span class="token operator">&amp;&amp;</span> $ORGANIZATION_NAME <span class="token operator">!=</span> </span><span class="token string">&quot;&quot;</span><span class="token expression"><span class="token punctuation">)</span></span></span>
<span class="token comment">// Copyright (c) $YEAR \${ORGANIZATION_NAME}#if (!$ORGANIZATION_NAME.endsWith(&quot;.&quot;)).#end All rights reserved.</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">end</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">end</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果希望使用快捷键，可以配置<code>live templates</code><br><code>file-&gt;settting-&gt;editor-&gt;live templates-&gt;C/C++-&gt;+new live templates</code></p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-44-41.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-44-41"></p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-45-25.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-45-25"></p><p>自定义注释</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>/**
  ******************************************************************************
  * @file           : $ENDS$
  * @author         : ismeoh
  * @brief          : 
  * @date           : $DATE$
  ******************************************************************************
  */
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-47-44.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-47-44"></p><h2 id="方法注释" tabindex="-1"><a class="header-anchor" href="#方法注释" aria-hidden="true">#</a> 方法注释</h2><h3 id="方法注释1" tabindex="-1"><a class="header-anchor" href="#方法注释1" aria-hidden="true">#</a> 方法注释1</h3><p>使用自带的doxygen，即直接可以在方法名上面使用<code>///或//!或/**或/*!或/*</code>回车自动生成方法注释<br> 但是生成的注释少一个<code>@brief</code>，可以在如下开启<br><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-52-17.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-52-17"></p><h3 id="方法注释2" tabindex="-1"><a class="header-anchor" href="#方法注释2" aria-hidden="true">#</a> 方法注释2</h3><p>使用live templates,自定义注释模板<code>live templates</code><br><code>file-&gt;settting-&gt;editor-&gt;live templates-&gt;C/C++-&gt;+new live templates</code>和之前定义文件注释的第二种方法一样<br> 新建一个live templates<br><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-44-41.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-44-41"></p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-22-23-45-25.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-22-23-45-25"></p><p>自定义注释如下</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>**
 * &lt;pre&gt;$method$ method&lt;/pre&gt;
$params$
 * @return $return$
 * @author &lt;a href=&quot;mailto:sdtkin1996@gmail.com&quot;&gt;QuinnTian&lt;/a&gt; 
 * @since $DATE$ $time$ 
 */!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中上面，和之前定义文件注释的第二种方法一样，但是要想能自动生成参数列表需要做如下配置，编辑变量</p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/jetbrains系列如IDEA注释模板配置-2023-02-23-00-04-40.png" alt="jetbrains系列如IDEA注释模板配置-2023-02-23-00-04-40"><br> 写入如下脚本代码</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>groovyScript(&quot;def result=&#39;&#39;; def params=\\&quot;\${_1}\\&quot;.replaceAll(&#39;[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]&#39;, &#39;&#39;).split(&#39;,&#39;).toList(); for(i = 0; i &lt; params.size(); i++) {result+=&#39; * @param &#39; + params[i] + ((i &lt; params.size() - 1) ? &#39;\\\\n&#39; : &#39;&#39;)}; return result&quot;, methodParameters())
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,25),r=[t];function d(l,c){return s(),n("div",null,r)}const o=e(a,[["render",d],["__file","jetbrains系列如IDEA注释模板配置.html.vue"]]);export{o as default};
