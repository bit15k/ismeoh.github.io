import{_ as e,X as d,Y as a,a1 as c}from"./framework-ca96282b.js";const i={},n=c(`<h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h1><p>数组是一批数组的有机整体，数组中类型必须一致</p><h2 id="一维数组" tabindex="-1"><a class="header-anchor" href="#一维数组" aria-hidden="true">#</a> 一维数组</h2><p>定义一维数组<br><code>数据类型 数组名[常量表达式]</code>,如<code>int n[10]</code></p><p>数组的下标是从0开始，数组数目不能用变量</p><p>访问数组元素<br><code>数组名[下标]</code></p><p>数组初始化<br><code>数据类型 数组名[数目] = {}</code>,如<code>int a[2] ={1,2}</code>或不指定数目<code>int a[]={1,2}</code></p><p>数组赋值<br> 数组赋值只能逐个赋值即<code>a[0]=1</code>，<code>a={1,2,4}</code>是错误的</p><h2 id="二维数组" tabindex="-1"><a class="header-anchor" href="#二维数组" aria-hidden="true">#</a> 二维数组</h2><p>定义二维数组<br><code>数据类型 数组名[常量表达式][常量表达式]</code>,如<code>int n[10][3]</code>,其中第一个表示行，第二个表示列</p><p>二维数组是按行存放的，即现存完第一行，再存第二行，每一行按列存放</p><p>访问数组元素<br><code>数组名[行标][列标]</code><br> 行标和列标都是从0开始</p><p>初始化<br> 分行赋值</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>int a[2][3] = {{1,2,3},{4,5,6}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>全部赋值，会自动按行存储</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>int a[2][3] = {1,2,3,4,5,6}
// 也可省略行标
int a[][3] = {1,2,3,4,5,6}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>局部赋值，没有指定会赋值0</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>int a[2][3] = {{1},{4}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="字符数组与字符串" tabindex="-1"><a class="header-anchor" href="#字符数组与字符串" aria-hidden="true">#</a> 字符数组与字符串</h2><p>字符数组与普通数组一致，唯一不同是如果初始化数组不满会自动填充<code>\\0</code>作为占位符</p><p>字符串常量是指用双引号包裹起来的，其本质还是字符数组只不过系统在末尾自动加了<code>\\0</code>作为字符串结束标志</p><p>可以使用字符串常量进行字符数组的初始化<br><code>char s[] = {&quot;hello&quot;}</code>等同于<code>char s[]=&quot;hello&quot;</code>,这里字符数组昌都市6，因为在其尾部系统自动加了<code>\\0</code><br> 等价于逐个赋值<code>char s[] = {&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;}</code></p><h2 id="字符串类型" tabindex="-1"><a class="header-anchor" href="#字符串类型" aria-hidden="true">#</a> 字符串类型</h2>`,23),r=[n];function o(s,l){return d(),a("div",null,r)}const h=e(i,[["render",o],["__file","90-数组.html.vue"]]);export{h as default};
