import{_ as a,W as e,X as r,a0 as n}from"./framework-0a321081.js";const t={},i=n('<h1 id="spring-aop" tabindex="-1"><a class="header-anchor" href="#spring-aop" aria-hidden="true">#</a> Spring AOP</h1><h2 id="什么是aop" tabindex="-1"><a class="header-anchor" href="#什么是aop" aria-hidden="true">#</a> 什么是AOP</h2><p>AOP可以将代码逻辑中耦合较为严重的部分切开，例如记录日志，我们需要在每个的方法开始和结束部分，打印日志。如果使用AOP可以简化这一操作。AOP只是一种补充，比如上面解决日志问题，无法用AOP单独的开发一个应用</p><h2 id="aop的一些概念" tabindex="-1"><a class="header-anchor" href="#aop的一些概念" aria-hidden="true">#</a> AOP的一些概念</h2><p>连接点：是在程序运行中一些重要的点，例如方法的调用、类的初始化、对象的实例化等等，在连接点处你可以插入新的逻辑，比如上面的打印日志</p>',5),o=[i];function h(c,d){return e(),r("div",null,o)}const p=a(t,[["render",h],["__file","Spring AOP.html.vue"]]);export{p as default};
