import{_ as n,X as s,Y as a,a1 as e}from"./framework-ca96282b.js";const t={},p=e(`<h1 id="c指针相关概念" tabindex="-1"><a class="header-anchor" href="#c指针相关概念" aria-hidden="true">#</a> C指针相关概念</h1><p><strong>指针</strong>就是地址，记录存储变量的那块区域的内存地址，形象化的称作指向或指针</p><p><strong>直接访问</strong>利用变量名进行访问数据叫做直接访问,比如下面</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>间接访问</strong>如下图，一个变量存储另外一个变量的地址，然后通过该变量存储的地址找到它指向的变量<br><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/20230202191414.png" alt="20230202191414"></p><p>C语言中用于 <strong>定义存储地址的类型</strong>，如下</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">*</span>pt<span class="token punctuation">;</span> <span class="token comment">// 定义存储指向整型的地址</span>
pt <span class="token operator">=</span> <span class="token operator">&amp;</span>i<span class="token punctuation">;</span> <span class="token comment">// 取i地址给pt存</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问i，也可以通过 <strong>直接访问</strong>和 <strong>间接访问</strong>,如下</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 直接访问</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span><span class="token operator">*</span>pt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 间接访问</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>*pt</code>,表示先取出pt存的地址，然后通过该地址进行访问，最后取出i存的变量</p><p><img src="https://cdn.jsdelivr.net/gh/ismeoh/imgchr//imgs/20230202192734.png" alt="20230202192734"></p><p>\`<em>pt</em>和i都是表示i，例如给i赋值有两种写法</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token operator">*</span>pt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
i <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>*pt</code>是指自己通过地址找到的i变量，<code>i</code>是指通过操作编译后直接通过变量名访问</p><p><strong>指针变量</strong> 即一个变量专门用来存储地址,或者叫做指针变量存储的是地址;指针是指地址，指针变量是一个变量</p>`,15),o=[p];function c(i,r){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","01-c-pointer-introduce.html.vue"]]);export{d as default};
