import{_ as a,X as n,Y as s,a1 as e}from"./framework-7c93dcdd.js";const t={},c=e(`<h1 id="js语法及变量" tabindex="-1"><a class="header-anchor" href="#js语法及变量" aria-hidden="true">#</a> JS语法及变量</h1><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><p>JavaScript是一个<strong>区分大小写的语言</strong></p><h3 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符" aria-hidden="true">#</a> 标识符</h3><p>所谓<strong>标识符</strong>，就是变量、函数、属性或函数参数的名称。标识符可以由一或多个下列字符组成：</p><p>第一个字符必须是一个字母、下划线（_）或美元符号（$）；<br> 剩下的其他字符可以是字母、下划线、美元符号或数字。</p><p>注意：按照惯例，ECMAScript 标识符使用驼峰大小写形式，即第一个单词的首字母小写，后面每个单词的首字母大写，如：<br><code>myCar</code></p><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><p><code>// 单行注释</code><br><code>/* 这是多行注释 */</code></p><h3 id="严格模式" tabindex="-1"><a class="header-anchor" href="#严格模式" aria-hidden="true">#</a> 严格模式</h3><p>ECMAScript 5 增加了**严格模式（strict mode）**的概念。严格模式是一种不同于JavaScript 解析和执行模型，ECMAScript 3 的一些不规范写法在这种模式下会被处理，对于不安全的活动将抛出错误。</p><p>启用严格模式<br><code>&quot;use strict&quot;;</code>在头部添加<br> 在函数体内启用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
 <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span> 
 <span class="token comment">// 函数体 </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="语句" tabindex="-1"><a class="header-anchor" href="#语句" aria-hidden="true">#</a> 语句</h3><p>ECMAScript 中的语句以分号结尾。省略分号意味着由解析器确定语句在哪里结尾，如下面的例子所示：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token comment">// 没有分号也有效，但不推荐</span>
<span class="token keyword">let</span> diff <span class="token operator">=</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span> <span class="token comment">// 加分号有效，推荐</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>与花括号结合</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 有效，但容易导致错误，应该避免</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> 
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 推荐</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关键字和保留字" tabindex="-1"><a class="header-anchor" href="#关键字和保留字" aria-hidden="true">#</a> 关键字和保留字</h3><p>具有特殊用途的，关键字不能用于变量名等，具体不再赘述，用到上网查询即可</p>`,20),i=[c];function p(o,r){return n(),s("div",null,i)}const l=a(t,[["render",p],["__file","01-js-grammer.html.vue"]]);export{l as default};
